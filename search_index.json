[["index.html", "Faros del Mercado: Índices Bursátiles que Guían la Economía Mundial. Chapter 1 Descripción del proceso y justificación del análisis de los valores bursátiles en los principales mercados globales: Estados Unidos, Europa y Asia. 1.1 Descripción del proyecto. 1.2 Justificación e importancia del análisis.", " Faros del Mercado: Índices Bursátiles que Guían la Economía Mundial. Paolo De La Hoz Vicari, Genjis Ossa Gonzales 2025-04-28 Chapter 1 Descripción del proceso y justificación del análisis de los valores bursátiles en los principales mercados globales: Estados Unidos, Europa y Asia. 1.1 Descripción del proyecto. El proyecto se centrará en tres regiones clave: Estados Unidos (S&amp;P 500, NASDAQ, Dow Jones), Europa (DAX, CAC 40, FTSE 100) y Asia (Nikkei 225, Hang Seng, Shanghai Composite). Para cada índice, se recopilará información histórica diaria sobre precios de cierre, volumen y variación porcentual. Posteriormente, se realizará una limpieza y estructuración de los datos, seguida de un análisis exploratorio para identificar patrones, estacionalidades y correlaciones. A partir de esto, se aplicarán modelos de pronóstico como ARIMA, Prophet o técnicas de aprendizaje automático para estimar las tendencias futuras. El objetivo es generar una herramienta que permita anticipar cambios significativos y pronosticar valores en los mercados para la toma de decisiones. 1.2 Justificación e importancia del análisis. En el actual entorno económico, caracterizado por una creciente interconexión y volatilidad, el análisis y pronóstico de los valores de acciones en los principales mercados financieros es esencial para comprender las dinámicas económicas internacionales, anticipar crisis, identificar oportunidades de inversión y formular políticas económicas informadas.El análisis de los valores bursátiles en los principales mercados financieros (Estados Unidos, Europa y Asia) es fundamental para la toma de decisiones estratégicas en contextos económicos globalizados. Estos mercados, representan los polos financieros más influyentes del mundo, cuyas dinámicas afectan directa e indirectamente a las economías emergentes, al comercio internacional y a la inversión institucional y minorista. El análisis y pronóstico de estos valores permite anticipar tendencias, gestionar riesgos, optimizar carteras de inversión, comprender la interacción entre factores macroeconómicos (PIB, inflación, tasas de interés), eventos exógenos (guerras, pandemias, desastres naturales) y dinámicas propias de cada región (regulaciones, política monetaria, innovación tecnológica). Siendo una herramienta esencial tanto para inversores individuales como para instituciones financieras globales. Además, brinda información clave sobre la salud económica y la proyección futura de regiones que representan más del 75% del PIB mundial. Esta información no solo es clave para inversionistas, sino también para instituciones públicas y privadas que buscan estabilidad financiera, planificación a largo plazo y toma de decisiones estratégicas. En el caso de Estados Unidos, el mercado bursátil (representado por índices como el S&amp;P 500, NASDAQ y Dow Jones) es considerado un barómetro global de confianza económica y tecnológica. Su influencia es tal que las decisiones de la Reserva Federal o los resultados trimestrales de empresas como Apple o Microsoft pueden generar reacciones en cadena en los demás continentes. Europa, a través de bolsas como la de Frankfurt (DAX), París (CAC 40) o Londres (FTSE 100), representa un mercado con alta diversificación industrial, energética y financiera. Su relevancia radica en ser un punto de referencia para políticas regulatorias, estabilidad monetaria (especialmente en la zona euro) y tensiones geopolíticas que afectan la confianza de los inversionistas. Finalmente, Asia, con focos principales en Japón (Nikkei 225), China (Shanghai Composite) y Hong Kong (Hang Seng), constituye el eje de crecimiento económico más dinámico. China en particular, como segunda economía mundial, tiene un impacto decisivo en cadenas de suministro, comercio exterior y mercados emergentes. Principales Mercados Bursatiles "],["referencias.html", "Chapter 2 Referencias", " Chapter 2 Referencias Bloomberg Markets: https://www.bloomberg.com/markets Yahoo Finance: https://finance.yahoo.com World Bank Data: https://data.worldbank.org Financial Times – Markets: https://www.ft.com/markets "],["desarrollo.html", "Chapter 3 Desarrollo 3.1 Preprocesamiento de datos. 3.2 Gráfico de evolución histórica de todos los índices. 3.3 Promedios Móviles 3.4 AutoCorrelación ACF 3.5 Descomposición de serie de tiempo. 3.6 Tabla de resumen con tendencia, estacionalidad y ruido; para todos los indices. 3.7 Mapa de calor", " Chapter 3 Desarrollo 3.1 Preprocesamiento de datos. 3.1.1 Cargar las librerías necesarias Code library(quantmod) # Para descargar datos financieros library(dplyr) # Para manipular datos library(zoo) # Para series de tiempo basadas en fechas library(ggplot2) # Para gráficos bonitos library(tidyr) # Para transformar los datos 3.1.2 Definimos los índices bursátiles de interés (Yahoo Finance symbols). Code indices &lt;- c(&quot;^GSPC&quot;, &quot;^DJI&quot;, &quot;^IXIC&quot;, &quot;^GDAXI&quot;, &quot;^FCHI&quot;, &quot;^FTSE&quot;, &quot;^N225&quot;, &quot;^HSI&quot;, &quot;000001.SS&quot;) 3.1.3 Descargamos los datos de Yahoo Finance desde el 2019. Code lista_indices &lt;- lapply(indices, function(ticker) { getSymbols(ticker, src = &quot;yahoo&quot;, from = &quot;2019-01-01&quot;, auto.assign = FALSE) }) 3.1.4 Asignamos nombres a cada índice. Code nombres_indices &lt;- c(&quot;SP500&quot;, &quot;DowJones&quot;, &quot;Nasdaq&quot;, &quot;DAX&quot;, &quot;CAC40&quot;, &quot;FTSE100&quot;, &quot;Nikkei225&quot;, &quot;HangSeng&quot;, &quot;ShanghaiComposite&quot;) names(lista_indices) &lt;- nombres_indices 3.1.5 Extraemos solo los precios de cierre y convertimos cada serie en un objeto zoo. Code cierres_zoo &lt;- lapply(lista_indices, function(serie) { zoo(Cl(serie)) # Cl() extrae el &#39;Close&#39; y zoo() lo convierte a objeto de series de tiempo }) 3.1.6 Unimos todas las series zoo en un solo objeto. Code cierres_merged &lt;- do.call(merge, cierres_zoo) 3.1.7 Visualizamos la estructura. Code head(cierres_merged) ## GSPC.Close DJI.Close IXIC.Close GDAXI.Close FCHI.Close FTSE.Close ## 2019-01-02 2510.03 23346.24 6665.94 10580.19 4689.39 6734.2 ## 2019-01-03 2447.89 22686.22 6463.50 10416.66 4611.49 6692.7 ## 2019-01-04 2531.94 23433.16 6738.86 10767.69 4737.12 6837.4 ## 2019-01-07 2549.69 23531.35 6823.47 10747.81 4719.17 6810.9 ## 2019-01-08 2574.41 23787.45 6897.00 10803.98 4773.27 6861.6 ## 2019-01-09 2584.96 23879.12 6957.08 10893.32 4813.58 6906.6 ## N225.Close HSI.Close 000001.SS.Close ## 2019-01-02 NA 25130.35 2465.291 ## 2019-01-03 NA 25064.36 2464.363 ## 2019-01-04 19561.96 25626.03 2514.868 ## 2019-01-07 20038.97 25835.70 2533.089 ## 2019-01-08 20204.04 25875.45 2526.462 ## 2019-01-09 20427.06 26462.32 2544.345 3.2 Gráfico de evolución histórica de todos los índices. 3.2.1 Convertir a un data frame para ggplot y reestructuración en formato largo para gráficos. Code cierres_df &lt;- data.frame(Date = index(cierres_merged), coredata(cierres_merged)) cierres_long &lt;- cierres_df %&gt;% pivot_longer(cols = -Date, names_to = &quot;Indice&quot;, values_to = &quot;Cierre&quot;) 3.2.2 Gráfico. El gráfico muestra la evolución diaria de los precios de cierre de los principales índices bursátiles a nivel mundial desde 2019 hasta la fecha actual. Cada línea representa un índice diferente, con escalas independientes de precio en el eje Y y fechas en el eje X. Eje X: Fecha (de 2019 a 2025). Eje Y: Precio de cierre (escala real de cada índice). Variables representadas: SP500, Dow Jones, Nasdaq, DAX, CAC40, FTSE100, Nikkei225, Hang Seng, Shanghai Composite. Code ggplot(cierres_long, aes(x = Date, y = Cierre, color = Indice)) + geom_line() + labs( title = &quot;Evolución histórica de índices bursátiles (2019-Actualidad)&quot;, x = &quot;Fecha&quot;, y = &quot;Precio de Cierre&quot;, color = &quot;Índice&quot; ) + theme_minimal() 3.3 Promedios Móviles 3.3.1 Aplicamos promedio móvil (7, 30, 90 días) para cada índice. Code promedios_moviles &lt;- lapply(cierres_zoo, function(serie) { data.frame( Fecha = index(serie), Original = as.numeric(serie), MA_7 = as.numeric(rollmean(serie, k = 7, fill = NA, align = &quot;right&quot;)), MA_30 = as.numeric(rollmean(serie, k = 30, fill = NA, align = &quot;right&quot;)), MA_90 = as.numeric(rollmean(serie, k = 90, fill = NA, align = &quot;right&quot;)) ) }) 3.3.2 Asignamos los nombres de los indices Code names(promedios_moviles) &lt;- nombres_indices 3.3.3 Graficamos los promedios móviles en todos los indices con (7, 30, 90 días) SP500: Crecimiento fuerte post-pandemia, promedios móviles confirman tendencia alcista estructural, recuperación rápida tras caídas. Dow Jones: Crecimiento sostenido, mayor sensibilidad a choques globales, MA_90 actúa como soporte de tendencia. Nasdaq: Expansión explosiva durante 2020-2022, correcciones posteriores, fuerte volatilidad de corto plazo. DAX: Recuperación sólida, crecimiento más moderado que SP500, volatilidad controlada en 2023-2024. CAC40: Crecimiento progresivo, recuperación fuerte post-pandemia, estabilidad pese a contexto europeo incierto. FTSE100: Recuperación más lenta, crecimiento más estable pero menos acelerado, reflejando impacto de Brexit y COVID-19. Nikkei225: Crecimiento firme y constante, volatilidad moderada, estabilidad asiática frente a shocks externos. HangSeng: Tendencia decreciente persistente, afectado por tensiones políticas y regulación, no logra recuperación estructural. Shanghai Composite: Oscilaciones cíclicas sin tendencia fuerte, movimientos suaves ligados a política económica interna. Code graficar_promedios_moviles &lt;- function(df, nombre_indice) { df_long &lt;- df %&gt;% pivot_longer(cols = c(&quot;Original&quot;, &quot;MA_7&quot;, &quot;MA_30&quot;, &quot;MA_90&quot;), names_to = &quot;Serie&quot;, values_to = &quot;Valor&quot;) ggplot(df_long, aes(x = Fecha, y = Valor, color = Serie)) + geom_line() + labs( title = paste(nombre_indice, &quot;- Evolución y Promedios Móviles (7, 30, 90 días)&quot;), x = &quot;Fecha&quot;, y = &quot;Precio&quot;, color = &quot;Serie&quot; ) + theme_minimal() } for (indice in nombres_indices) { print(graficar_promedios_moviles(promedios_moviles[[indice]], indice)) } 3.4 AutoCorrelación ACF 3.4.1 Graficamos la autocorrelación (ACF) en todos los indices. SP500: Presenta autocorrelaciones extremadamente altas en todos los lags. Indica muy alta dependencia temporal, el precio de hoy está casi totalmente explicado por el precio de ayer, anteayer, etc. DowJones: Patrón idéntico al SP500, autocorrelaciones cercanas a 1 hasta el lag 30. Confirma fuerte persistencia y memoria de largo plazo en el comportamiento de precios. Nasdaq: Igual que SP500 y DowJones, persistencia total en los precios diarios. Movimiento fuertemente dependiente de valores anteriores. Alta estabilidad interna. DAX: Alta autocorrelación, pero comienza a decrecer muy lentamente conforme aumenta el lag. Muestra persistencia, aunque ligeramente menos rígida que en índices estadounidenses. CAC40: Comportamiento muy similar al DAX con alta autocorrelación inicial, pero con una leve pendiente descendente a partir del lag 10. Indica ligero debilitamiento de la dependencia en el tiempo. FTSE100: Alta autocorrelación, pero con una pendiente descendente más pronunciada que en DAX o CAC40. La dependencia de precios pasados existe pero se va diluyendo más rápido. Nikkei225: Persistencia fuerte (autocorrelaciones cercanas a 1), aunque ligeramente más “sueltas” que en los mercados occidentales. Los precios tienden a ser explicados por valores pasados, pero hay algo más de ruido. HangSeng: Alta autocorrelación inicial, pero decayendo progresivamente con el lag. Refleja una memoria de precios, aunque menos estable y más volátil que SP500 o DowJones. Shanghai Composite: Es el único donde la autocorrelación desciende de forma continua y más marcada a medida que crece el lag. Esto indica que la memoria de los precios se erosiona rápidamente en China. Mayor aleatoriedad y menor persistencia estructural en los precios. Code graficar_acf &lt;- function(serie, nombre_indice) { serie_sin_na &lt;- na.omit(serie) # 1. Eliminar los valores faltantes (NA) acf(coredata(serie_sin_na), # 2. Calcula autocorrelaciones lag.max = 30, # 3. Mide autocorrelaciones hasta 30 rezagos (lags) main = paste(&quot;Autocorrelación (ACF) -&quot;, nombre_indice)) # 4. Título del gráfico } # Aplicar la función a todos los índices for (indice in nombres_indices) { graficar_acf(cierres_zoo[[indice]], indice) } 3.5 Descomposición de serie de tiempo. 3.5.1 Descomponemos y graficamos los indices bursatiles utilizando la forma clasica y STL con pasos de limpieza e implementación. Code descomponer_y_graficar &lt;- function(serie_zoo, nombre_indice) { # Eliminamos NA serie_limpia &lt;- na.omit(serie_zoo) # Convertimos a vector numérico puro valores_numericos &lt;- as.numeric(serie_limpia) # Convertimos a objeto ts serie_ts &lt;- ts(valores_numericos, start = c(2019, 1), frequency = 252) # Graficamos descomposición clásica plot(decompose(serie_ts)) mtext(paste(&quot;Descomposición Clásica -&quot;, nombre_indice), side = 3, line = 1, cex = 1.5) # Graficamos descomposición STL plot(stl(serie_ts, s.window = &quot;periodic&quot;)) mtext(paste(&quot;Descomposición STL -&quot;, nombre_indice), side = 3, line = 1, cex = 1.5) } # Aplicamos la función a todos los índices for (indice in nombres_indices) { descomponer_y_graficar(cierres_zoo[[indice]], indice) } 3.6 Tabla de resumen con tendencia, estacionalidad y ruido; para todos los indices. Code analizar_comportamiento &lt;- function(serie_zoo) { serie_limpia &lt;- na.omit(serie_zoo) valores &lt;- as.numeric(serie_limpia) ts_serie &lt;- ts(valores, start = c(2019, 1), frequency = 252) # Decomposición STL descomposicion &lt;- stl(ts_serie, s.window = &quot;periodic&quot;) trend &lt;- descomposicion$time.series[, &quot;trend&quot;] seasonal &lt;- descomposicion$time.series[, &quot;seasonal&quot;] remainder &lt;- descomposicion$time.series[, &quot;remainder&quot;] # --- Tendencia --- cambio_tendencia &lt;- (tail(trend, 1) - head(trend, 1)) / mean(trend) if (abs(cambio_tendencia) &gt; 0.1) { tendencia_eval &lt;- ifelse(cambio_tendencia &gt; 0, &quot;Creciente&quot;, &quot;Decreciente&quot;) } else { tendencia_eval &lt;- &quot;Estable&quot; } # --- Estacionalidad --- amplitud_estacional &lt;- max(seasonal) - min(seasonal) promedio_nivel &lt;- mean(valores, na.rm = TRUE) if ((amplitud_estacional / promedio_nivel) &gt; 0.05) { estacionalidad_eval &lt;- &quot;Fuerte&quot; } else { estacionalidad_eval &lt;- &quot;Débil&quot; } # --- Ruido --- sd_ruido &lt;- sd(remainder, na.rm = TRUE) if ((sd_ruido / promedio_nivel) &gt; 0.05) { ruido_eval &lt;- &quot;Alto&quot; } else { ruido_eval &lt;- &quot;Moderado&quot; } return(c(Tendencia = tendencia_eval, Estacionalidad = estacionalidad_eval, Ruido = ruido_eval)) } # Aplicarlo a todos los índices resumen_automatico &lt;- t(sapply(cierres_zoo, analizar_comportamiento)) # Convertir a data frame ordenado resumen_automatico_df &lt;- data.frame( Indice = nombres_indices, Tendencia = resumen_automatico[, &quot;Tendencia&quot;], Estacionalidad = resumen_automatico[, &quot;Estacionalidad&quot;], Ruido = resumen_automatico[, &quot;Ruido&quot;] ) # 4. Edición de tabla knitr::kable(resumen_automatico_df, caption = &quot;Resumen automático de la tendencia, estacionalidad y ruido observados por índice (basado en descomposición STL).&quot;) Table 3.1: Resumen automático de la tendencia, estacionalidad y ruido observados por índice (basado en descomposición STL). Indice Tendencia Estacionalidad Ruido SP500 SP500 Creciente Fuerte Moderado DowJones DowJones Creciente Fuerte Moderado Nasdaq Nasdaq Creciente Fuerte Moderado DAX DAX Creciente Fuerte Moderado CAC40 CAC40 Creciente Fuerte Moderado FTSE100 FTSE100 Creciente Fuerte Moderado Nikkei225 Nikkei225 Creciente Fuerte Moderado HangSeng HangSeng Decreciente Fuerte Moderado ShanghaiComposite ShanghaiComposite Creciente Fuerte Moderado 3.7 Mapa de calor Code # Cargar librería adicional para Heatmaps library(ggplot2) # 1. Usamos el resumen automático que ya creamos resumen_mapa &lt;- resumen_automatico_df # 2. Codificar las variables cualitativas a valores numéricos resumen_mapa_numeric &lt;- resumen_mapa %&gt;% mutate( Tendencia = case_when( Tendencia == &quot;Creciente&quot; ~ 1, Tendencia == &quot;Decreciente&quot; ~ -1, Tendencia == &quot;Estable&quot; ~ 0, TRUE ~ NA_real_ ), Estacionalidad = case_when( Estacionalidad == &quot;Fuerte&quot; ~ 1, Estacionalidad == &quot;Débil&quot; ~ 0, TRUE ~ NA_real_ ), Ruido = case_when( Ruido == &quot;Alto&quot; ~ 1, Ruido == &quot;Moderado&quot; ~ 0, TRUE ~ NA_real_ ) ) # 3. Reorganizar el dataframe en formato largo para ggplot resumen_long &lt;- resumen_mapa_numeric %&gt;% pivot_longer(cols = c(Tendencia, Estacionalidad, Ruido), names_to = &quot;Caracteristica&quot;, values_to = &quot;Valor&quot;) # 4. Crear el Heatmap ggplot(resumen_long, aes(x = Caracteristica, y = Indice, fill = Valor)) + geom_tile(color = &quot;white&quot;) + scale_fill_gradient2( low = &quot;red&quot;, mid = &quot;white&quot;, high = &quot;green&quot;, midpoint = 0, limits = c(-1, 1), name = &quot;Nivel&quot; ) + labs( title = &quot;Mapa de Calor: Tendencia, Estacionalidad y Ruido por Índice&quot;, x = &quot;Componente&quot;, y = &quot;Índice Bursátil&quot; ) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
